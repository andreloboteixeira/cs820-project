
----------- Iteration 1: Truck at node 0
Current STAUS:
Total Demand: 22/22  Demand list: [0, 0, 22, 0]
Total Supply: 100/100  Supply list: [50, 50]
Truck Current Load: 0/15


----- A) Decision: GOTO A WAREHOUSE, as the load 0 is bellow the threshold 7.5:

----- B) Searching the warehouse with the least path cost >>>
Supplies list:[50, 50]
--- current W id: 9
--- path to current W: [0, 5, 11, 9]
--- path cost: 3484.942

--- current W id: 10
--- path to current W: [0, 8, 10]
--- path cost: 2238.6719999999996

******Final Decision:
GOTO warehouse 10
GET 15 supplies from this warehouse


----------- Iteration 2: Truck at node 10
Current STAUS:
Total Demand: 22/22  Demand list: [0, 0, 22, 0]
Total Supply: 85/100  Supply list: [50, 35]
Truck Current Load: 15/15


----- A) Decision: GOTO A STORE, as the load 15 is above the threshold 7.5:

----- B) Searching the store with least path cost >>>
Demand list:[0, 0, 22, 0]
--- current S id: 1
--- path to current S: [10, 8, 11, 5, 1]
--- path cost: 3243.5469999999996

******Final Decision:
GOTO store 1
SUPPLY the store with the current truck load of 15


----------- Iteration 3: Truck at node 1
Current STAUS:
Total Demand: 7/22  Demand list: [0, 0, 7, 0]
Total Supply: 85/100  Supply list: [50, 35]
Truck Current Load: 0/15


----- A) Decision: GOTO A WAREHOUSE, as the load 0 is bellow the threshold 7.5:

----- B) Searching the warehouse with the least path cost >>>
Supplies list:[50, 35]
--- current W id: 9
--- path to current W: [1, 5, 11, 9]
--- path cost: 3078.157

--- current W id: 10
--- path to current W: [1, 5, 11, 8, 10]
--- path cost: 3243.5469999999996

******Final Decision:
GOTO warehouse 9
GET 15 supplies from this warehouse


----------- Iteration 4: Truck at node 9
Current STAUS:
Total Demand: 7/22  Demand list: [0, 0, 7, 0]
Total Supply: 70/100  Supply list: [35, 35]
Truck Current Load: 15/15


----- A) Decision: GOTO A STORE, as the load 15 is above the threshold 7.5:

----- B) Searching the store with least path cost >>>
Demand list:[0, 0, 7, 0]
--- current S id: 1
--- path to current S: [9, 11, 5, 1]
--- path cost: 3078.157

******Final Decision:
GOTO store 1
SUPPLY the entire demand from this store



------------ Final State of global demand and supply:
Remainging demand: 0
Remainging supplies: 70


------------ Final State of global demand and supply

Total time of the experiment:0.0031052230042405427


Truck started at node (0) with initial load of (0), and capacity of (15)

The algorithm used a threshold factor of (0.5)

The imported graph file name is 'graph'

The overall cost of the truck's path is: 11638.533
The list of paths is: 
[0, 8, 10]
[10, 8, 11, 5, 1]
[1, 5, 11, 9]
[9, 11, 5, 1]
