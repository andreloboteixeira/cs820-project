
----------- Iteration 1: Truck at node 0
Current STAUS:
Total Demand: 8/8  Demand list: [4, 4]
Total Supply: 10/10  Supply list: [5, 5]
Truck Current Load: 0/6


----- A) Decision: GOTO A WAREHOUSE, as the load 0 is bellow the threshold 3.0:

----- B) Searching the warehouse with the least path cost >>>
Supplies list:[5, 5]
--- current W id: 0
--- path to current W: [0]
--- path cost: 0

--- current W id: 7
--- path to current W: [0, 2, 7]
--- path cost: 1123.378

******Final Decision:
GOTO warehouse 0
GET all supplies from this warehouse


----------- Iteration 2: Truck at node 0
Current STAUS:
Total Demand: 8/8  Demand list: [4, 4]
Total Supply: 5/10  Supply list: [0, 5]
Truck Current Load: 5/6


----- A) Decision: GOTO A STORE, as the load 5 is above the threshold 3.0:

----- B) Searching the store with least path cost >>>
Demand list:[4, 4]
--- current S id: 1
--- path to current S: [0, 1]
--- path cost: 346.988

--- current S id: 4
--- path to current S: [0, 1, 4]
--- path cost: 559.61

******Final Decision:
GOTO store 1
SUPPLY the entire demand from this store


----------- Iteration 3: Truck at node 1
Current STAUS:
Total Demand: 4/8  Demand list: [0, 4]
Total Supply: 5/10  Supply list: [0, 5]
Truck Current Load: 1/6


----- A) Decision: GOTO A WAREHOUSE, as the load 1 is bellow the threshold 3.0:

----- B) Searching the warehouse with the least path cost >>>
Supplies list:[0, 5]
--- current W id: 7
--- path to current W: [1, 0, 2, 7]
--- path cost: 1470.366

******Final Decision:
GOTO warehouse 7
GET all supplies from this warehouse


----------- Iteration 4: Truck at node 7
Current STAUS:
Total Demand: 4/8  Demand list: [0, 4]
Total Supply: 0/10  Supply list: [0, 0]
Truck Current Load: 6/6


----- A) Decision: GOTO A STORE, as the load 6 is above the threshold 3.0:

----- B) Searching the store with least path cost >>>
Demand list:[0, 4]
--- current S id: 4
--- path to current S: [7, 2, 0, 1, 4]
--- path cost: 1682.988

******Final Decision:
GOTO store 4
SUPPLY the entire demand from this store



------------ Final State of global demand and supply:
Remainging demand: 0
Remainging supplies: 0


------------ Final State of global demand and supply

Total time of the experiment:0.0014759970072191209


Truck started at node (0) with initial load of (0), and capacity of (6)

The algorithm used a threshold factor of (0.5)

The imported graph file name is 'graph1'

The list of paths is 'graph1'
[0]
[0, 1]
[1, 0, 2, 7]
[7, 2, 0, 1, 4]
